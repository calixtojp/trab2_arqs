/*
    Duas formas de split: spli_1_para_2 e spli_2_para_3.
    A inserção é recursiva, de modo que se não consigo inserir no nó filho, devo fazer split.

    8 e 10 usam a mesma função de "insere_arvore"
    essa função de insere_arvore deve inserir um keyistro na arvore

    função 9 usa o processaRegistro()
*/

-se for folha, retorno o possível retorno de registro da insercao atual
-tento inserir no filho,
-se houver retorno de registro, tento inserir no atual
-retorno o possível retorno de registro da inserção do atual

key insercao(RRN_anterior, RRN_inserir, key_inserir):
    if cabeNeu:
        insereNeu(key_inserir)
        return key_invalido
    else:
        if da_pra_redistrifuir:
            redistribui(RRN_anterior, RRN_inserir, key_inserir)
            return key_invalido
        else:
            #caso de split
            if souRaizSouFeliz:
                spli_1_para_2(RRN_anterior, RRN_inserir, key_inserir)
            else:
                return spli_2_para_3


















key insercao(RRN_anterior, RRN_atual, key_inserir):
    if sou_folha:
        return insere_atual(RRN_anterior, RRN_atual, key_inserir)
    else:
        temp_key = insercao(RRN_atual, RRN_filho, key_inserir)
        if(eh_valido(temp_key)):
            return insere_atual(RRN_anterior, RRN_atual, temp_key)


inser